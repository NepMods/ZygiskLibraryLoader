name: Build and Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Optional release tag (e.g. v1.2.3). If omitted, workflow will generate one.'
        required: false
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/master'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: Cache Gradle directories
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Determine tag name
        id: tag
        run: |
          TAG_INPUT="${{ github.event.inputs.tag }}"
          if [ -n "$TAG_INPUT" ]; then
            TAG="$TAG_INPUT"
          elif [[ "${GITHUB_REF}" =~ refs/tags/(.*) ]]; then
            TAG="${BASH_REMATCH[1]}"
          elif [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            TAG="v$(date -u +'%Y.%m.%d')-r${GITHUB_RUN_NUMBER}"
          else
            TAG="v$(date -u +'%Y.%m.%d')-r${GITHUB_RUN_NUMBER}"
          fi
          echo "TAG_NAME=$TAG" >> $GITHUB_OUTPUT

      - name: Build (Gradle)
        run: |
          chmod +x ./gradlew
          ./gradlew clean build --no-daemon --stacktrace

      - name: Locate out/*.zip artifacts
        id: artifacts
        run: |
          set -e
          ls -la out || true
          mapfile -d '' files < <(find out -maxdepth 1 -type f -name '*.zip' -print0)
          if [ ${#files[@]} -eq 0 ]; then
            echo "files_found=false" >> $GITHUB_OUTPUT
            echo "files_list=" >> $GITHUB_OUTPUT
          else
            # convert absolute paths to paths relative to workspace if necessary
            REL_PATHS=()
            for f in "${files[@]}"; do
              # trim possible trailing NUL
              f="${f%$'\0'}"
              if [[ "$f" == "${GITHUB_WORKSPACE}/"* ]]; then
                REL="${f#${GITHUB_WORKSPACE}/}"
                REL_PATHS+=("$REL")
              else
                REL_PATHS+=("$f")
              fi
            done
            FILES=$(printf "%s," "${REL_PATHS[@]}")
            FILES=${FILES%,}
            echo "files_found=true" >> $GITHUB_OUTPUT
            echo "files_list=$FILES" >> $GITHUB_OUTPUT
          fi

      - name: Fail if no out/*.zip found
        if: steps.artifacts.outputs.files_found != 'true'
        run: |
          echo "No out/*.zip artifact found. Ensure your build produces out/*.zip."
          exit 1

      - name: Create and push git tag
        env:
          TAG_NAME: ${{ steps.tag.outputs.TAG_NAME }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$TAG_NAME" -m "Release $TAG_NAME"
          git push "https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git" "$TAG_NAME"

      - name: Create GitHub release and upload artifacts
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag.outputs.TAG_NAME }}
          name: ${{ steps.tag.outputs.TAG_NAME }}
          body: "Automated release created by GitHub Actions for ${{ steps.tag.outputs.TAG_NAME }}"
          artifacts: ${{ steps.artifacts.outputs.files_list }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
